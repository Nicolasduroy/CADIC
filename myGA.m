function [population,it] = myGA(f,V,M,lb,ub)
	% myGA(f,V,M,lb,ub)
	% f : function to minimize
	% V : Dimension of the search space.
	% M : Number of objectives.
	% lb = lower bound vector.
	% ub = upper bound vector. 

	%% DEFINITION OF THE PARAMETERS

	N = 10;    % Population size
	NP = 4;    % Size of the mating pool 
	NC = 4;    % Number of children generated by generation
	P = 0.5;     % probability of recombination

	verbose = true; % (true) plots each iteration

	%% GENETIC ALGORITHM

	% Generation of the intial population
	population = initPopulation(N,V); % [10 *2] 

	population = evaluatePopulation(population,f,N,V,M,lb,ub); %10*3
	population = sortPopulation(population,V,M);
	% Main loop
	
%%%%%%%%%%%%%%%%%%%%%%%% \\ Do not change this part of the code!!
	it = 1;
	runFlag = true;
	while runFlag
%%%%%%%%%%%%%%%%%%%%%%%% \\ Proceed with changes below!

		parents = selectionTournament(population,NP,V,M);	

		offspring = geneticOperators(parents,f,N,NC,P,V,M,lb,ub);

		population = [ population(:,1:V+M) ; offspring(:,1:V+M) ]; % vertical on eachother 

		population = sortPopulation(population,V,M);

		population = cropPopulation(population,N);

		% Visualization
		if verbose
			illustratePopulation(population,V,M,lb,ub,it);
			drawnow;
			pause(0.1);
		end

		it = it+1;

		runFlag = stopCriterion(it);
	end
	
end
